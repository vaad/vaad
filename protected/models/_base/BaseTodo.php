<?php

/**
 * This is the model base class for the table "todo".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Todo".
 *
 * Columns in table "todo" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $tsk_title
 * @property integer $tsk_status
 * @property string $tsk_category
 * @property string $tsk_description
 * @property integer $tsk_priority
 *
 */
abstract class BaseTodo extends VdActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'todo';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Todo|Todos', $n);
	}

	public static function representingColumn() {
		return 'tsk_title';
	}

	public function rules() {
		return array(
			array('tsk_title, tsk_status, tsk_category', 'required'),
			array('tsk_status, tsk_priority', 'numerical', 'integerOnly'=>true),
			array('tsk_title, tsk_category', 'length', 'max'=>30),
			array('tsk_description', 'safe'),
			array('tsk_description, tsk_priority', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, tsk_title, tsk_status, tsk_category, tsk_description, tsk_priority', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'tsk_title' => Yii::t('app', 'Tsk Title'),
			'tsk_status' => Yii::t('app', 'Tsk Status'),
			'tsk_category' => Yii::t('app', 'Tsk Category'),
			'tsk_description' => Yii::t('app', 'Tsk Description'),
			'tsk_priority' => Yii::t('app', 'Tsk Priority'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('tsk_title', $this->tsk_title, true);
		$criteria->compare('tsk_status', $this->tsk_status);
		$criteria->compare('tsk_category', $this->tsk_category, true);
		$criteria->compare('tsk_description', $this->tsk_description, true);
		$criteria->compare('tsk_priority', $this->tsk_priority);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}