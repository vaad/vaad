<?php

/**
 * This is the model base class for the table "incomes".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Incomes".
 *
 * Columns in table "incomes" available as properties of the model,
 * followed by relations of table "incomes" available as properties of the model.
 *
 * @property integer $id
 * @property integer $bld_id
 * @property integer $prj_id
 * @property string $inc_date
 * @property string $inc_until_date
 * @property double $inc_amount
 * @property boolean $inc_paid
 * @property integer $inc_branch
 * @property integer $inc_chk_no
 * @property string $inc_chk_date
 * @property integer $inc_apt_num
 * @property integer $inc_bank
 *
 * @property Buildings $bld
 * @property Appartments $incAptNum
 * @property BankCodes $incBank
 * @property Projects $prj
 */
abstract class BaseIncomes extends VdActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'incomes';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Incomes|Incomes', $n);
	}

	public static function representingColumn() {
		return array('inc_date','inc_amount','inc_apt_num');
	}

	public function rules() {
		return array(
			array(' inc_date, inc_amount', 'required'),
			array('bld_id, prj_id, inc_branch, inc_chk_no, inc_apt_num, inc_bank', 'numerical', 'integerOnly'=>true),
			array('inc_amount', 'numerical'),
			array('inc_until_date, inc_paid, inc_chk_date', 'safe'),
			array('prj_id, inc_until_date, inc_paid, inc_branch, inc_chk_no, inc_chk_date, inc_apt_num, inc_bank', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, bld_id, prj_id, inc_date, inc_until_date, inc_amount, inc_paid, inc_branch, inc_chk_no, inc_chk_date, inc_apt_num, inc_bank', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'bld' => array(self::BELONGS_TO, 'Buildings', 'bld_id'),
			'incAptNum' => array(self::BELONGS_TO, 'Appartments', 'inc_apt_num'),
			'incBank' => array(self::BELONGS_TO, 'BankCodes', 'inc_bank'),
			'prj' => array(self::BELONGS_TO, 'Projects', 'prj_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'bld_id' => null,
			'prj_id' => null,
			'inc_date' => Yii::t('app', 'Inc Date'),
			'inc_until_date' => Yii::t('app', 'Inc Until Date'),
			'inc_amount' => Yii::t('app', 'Inc Amount'),
			'inc_paid' => Yii::t('app', 'Inc Paid'),
			'inc_branch' => Yii::t('app', 'Inc Branch'),
			'inc_chk_no' => Yii::t('app', 'Inc Chk No'),
			'inc_chk_date' => Yii::t('app', 'Inc Chk Date'),
			'inc_apt_num' => null,
			'inc_bank' => null,
			'bld' => null,
			'incAptNum' => null,
			'incBank' => null,
			'prj' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('bld_id', $this->bld_id);
		$criteria->compare('prj_id', $this->prj_id);
		$criteria->compare('inc_date', $this->inc_date, true);
		$criteria->compare('inc_until_date', $this->inc_until_date, true);
		$criteria->compare('inc_amount', $this->inc_amount);
		$criteria->compare('inc_paid', $this->inc_paid);
		$criteria->compare('inc_branch', $this->inc_branch);
		$criteria->compare('inc_chk_no', $this->inc_chk_no);
		$criteria->compare('inc_chk_date', $this->inc_chk_date, true);
		$criteria->compare('inc_apt_num', $this->inc_apt_num);
		$criteria->compare('inc_bank', $this->inc_bank);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
