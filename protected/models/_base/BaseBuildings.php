<?php

/**
 * This is the model base class for the table "buildings".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Buildings".
 *
 * Columns in table "buildings" available as properties of the model,
 * followed by relations of table "buildings" available as properties of the model.
 *
 * @property integer $id
 * @property integer $site_id
 * @property boolean $is_active
 * @property string $bld_street
 * @property string $bld_num
 * @property string $bld_city
 * @property string $bld_zip
 * @property integer $bld_num_app
 * @property integer $bld_min_floor
 * @property integer $bld_max_floor
 *
 * @property Sites $site
 * @property Taxes[] $taxes
 * @property Appartments[] $appartments
 * @property Accounts[] $accounts
 * @property AppTaxes[] $appTaxes
 * @property Tenants[] $tenants
 * @property Ads[] $ads
 * @property Comments[] $comments
 * @property Projects[] $projects
 * @property Transactions[] $transactions
 * @property Reminders[] $reminders
 * @property Tags[] $tags
 * @property Tasks[] $tasks
 * @property TicketHistory[] $ticketHistories
 * @property Tickets[] $tickets
 * @property Forums[] $forums
 * @property Incomes[] $incomes
 * @property Polls[] $polls
 * @property Receipts[] $receipts
 * @property PostTags[] $postTags
 * @property Posts[] $posts
 * @property Contacts[] $contacts
 * @property AptMaintenance[] $aptMaintenances
 */
abstract class BaseBuildings extends GxActiveRecord {

    protected function beforeFind() {
        $bld_id = Yii::app()->params['bld_id'];
        $criteria = new CDbCriteria;
        $criteria->condition = "id = $bld_id";
        //$criteria->order = "username ASC";
        $this->dbCriteria->mergeWith($criteria);
        parent::beforeFind();
    }

    protected function beforeSave() {
        $site_id = Yii::app()->params['site_id'];
        $this->site_id = $site_id;
        parent::beforeSave();
    }
    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'buildings';
    }

    public static function label($n = 1) {
        return Yii::t('app', 'Buildings|Buildings', $n);
    }

    public static function representingColumn() {
        return 'bld_street';
    }

    public function rules() {
        return array(
            array('bld_street, bld_num, bld_city, bld_zip', 'required'),
            array('bld_num_app, bld_min_floor, bld_max_floor', 'numerical', 'integerOnly' => true),
            array('bld_street', 'length', 'max' => 50),
            array('bld_num', 'length', 'max' => 10),
            array('bld_city', 'length', 'max' => 25),
            array('bld_zip', 'length', 'max' => 5),
            array('is_active', 'safe'),
            array('is_active, bld_num_app, bld_min_floor, bld_max_floor', 'default', 'setOnEmpty' => true, 'value' => null),
            array('id, site_id, is_active, bld_street, bld_num, bld_city, bld_zip, bld_num_app, bld_min_floor, bld_max_floor', 'safe', 'on' => 'search'),
        );
    }

    public function relations() {
        return array(
            'site' => array(self::BELONGS_TO, 'Sites', 'site_id'),
            'taxes' => array(self::HAS_MANY, 'Taxes', 'bld_id'),
            'appartments' => array(self::HAS_MANY, 'Appartments', 'bld_id'),
            'accounts' => array(self::HAS_MANY, 'Accounts', 'bld_id'),
            'appTaxes' => array(self::HAS_MANY, 'AppTaxes', 'bld_id'),
            'tenants' => array(self::HAS_MANY, 'Tenants', 'bld_id'),
            'ads' => array(self::HAS_MANY, 'Ads', 'bld_id'),
            'comments' => array(self::HAS_MANY, 'Comments', 'bld_id'),
            'projects' => array(self::HAS_MANY, 'Projects', 'bld_id'),
            'transactions' => array(self::HAS_MANY, 'Transactions', 'bld_id'),
            'reminders' => array(self::HAS_MANY, 'Reminders', 'bld_id'),
            'tags' => array(self::HAS_MANY, 'Tags', 'bld_id'),
            'tasks' => array(self::HAS_MANY, 'Tasks', 'bld_id'),
            'ticketHistories' => array(self::HAS_MANY, 'TicketHistory', 'bld_id'),
            'tickets' => array(self::HAS_MANY, 'Tickets', 'bld_id'),
            'forums' => array(self::HAS_MANY, 'Forums', 'bld_id'),
            'incomes' => array(self::HAS_MANY, 'Incomes', 'bld_id'),
            'polls' => array(self::HAS_MANY, 'Polls', 'bld_id'),
            'receipts' => array(self::HAS_MANY, 'Receipts', 'bld_id'),
            'postTags' => array(self::HAS_MANY, 'PostTags', 'bld_id'),
            'posts' => array(self::HAS_MANY, 'Posts', 'bld_id'),
            'contacts' => array(self::HAS_MANY, 'Contacts', 'bld_id'),
            'aptMaintenances' => array(self::HAS_MANY, 'AptMaintenance', 'bld_id'),
        );
    }

    public function pivotModels() {
        return array(
        );
    }

    public function attributeLabels() {
        return array(
            'id' => Yii::t('app', 'ID'),
            'site_id' => null,
            'is_active' => Yii::t('app', 'Is Active'),
            'bld_street' => Yii::t('app', 'Bld Street'),
            'bld_num' => Yii::t('app', 'Bld Num'),
            'bld_city' => Yii::t('app', 'Bld City'),
            'bld_zip' => Yii::t('app', 'Bld Zip'),
            'bld_num_app' => Yii::t('app', 'Bld Num App'),
            'bld_min_floor' => Yii::t('app', 'Bld Min Floor'),
            'bld_max_floor' => Yii::t('app', 'Bld Max Floor'),
            'site' => null,
            'taxes' => null,
            'appartments' => null,
            'accounts' => null,
            'appTaxes' => null,
            'tenants' => null,
            'ads' => null,
            'comments' => null,
            'projects' => null,
            'transactions' => null,
            'reminders' => null,
            'tags' => null,
            'tasks' => null,
            'ticketHistories' => null,
            'tickets' => null,
            'forums' => null,
            'incomes' => null,
            'polls' => null,
            'receipts' => null,
            'postTags' => null,
            'posts' => null,
            'contacts' => null,
            'aptMaintenances' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('site_id', $this->site_id);
        $criteria->compare('is_active', $this->is_active);
        $criteria->compare('bld_street', $this->bld_street, true);
        $criteria->compare('bld_num', $this->bld_num, true);
        $criteria->compare('bld_city', $this->bld_city, true);
        $criteria->compare('bld_zip', $this->bld_zip, true);
        $criteria->compare('bld_num_app', $this->bld_num_app);
        $criteria->compare('bld_min_floor', $this->bld_min_floor);
        $criteria->compare('bld_max_floor', $this->bld_max_floor);

        return new CActiveDataProvider($this, array(
                    'criteria' => $criteria,
                ));
    }

}