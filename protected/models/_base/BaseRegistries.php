<?php

/**
 * This is the model base class for the table "registries".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Registries".
 *
 * Columns in table "registries" available as properties of the model,
 * followed by relations of table "registries" available as properties of the model.
 *
 * @property integer $id
 * @property integer $bld_id
 * @property integer $tnt_app_num
 * @property string $tnt_first_name
 * @property string $tnt_last_name
 * @property string $tnt_password
 * @property string $tnt_birthday
 * @property string $tnt_email
 * @property string $tnt_app_phone
 * @property string $tnt_picture
 * @property string $tnt_mobile
 * @property string $tnt_entry_date
 * @property string $tnt_occupation
 * @property boolean $tnt_is_owner
 *
 * @property Buildings $bld
 * @property Appartments $tntAppNum
 */
abstract class BaseRegistries extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'registries';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Registries|Registries', $n);
	}

	public static function representingColumn() {
		return 'tnt_first_name';
	}

	public function rules() {
		return array(
			array('tnt_first_name, tnt_last_name, tnt_password, tnt_email', 'required'),
			array('bld_id, tnt_app_num', 'numerical', 'integerOnly'=>true),
			array('tnt_first_name, tnt_last_name', 'length', 'max'=>15),
			array('tnt_password, tnt_email', 'length', 'max'=>60),
			array('tnt_app_phone, tnt_mobile', 'length', 'max'=>20),
			array('tnt_picture', 'length', 'max'=>255),
			array('tnt_occupation', 'length', 'max'=>30),
			array('tnt_birthday, tnt_entry_date, tnt_is_owner', 'safe'),
			array('bld_id, tnt_app_num, tnt_birthday, tnt_app_phone, tnt_picture, tnt_mobile, tnt_entry_date, tnt_occupation, tnt_is_owner', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, bld_id, tnt_app_num, tnt_first_name, tnt_last_name, tnt_password, tnt_birthday, tnt_email, tnt_app_phone, tnt_picture, tnt_mobile, tnt_entry_date, tnt_occupation, tnt_is_owner', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'bld' => array(self::BELONGS_TO, 'Buildings', 'bld_id'),
			'tntAppNum' => array(self::BELONGS_TO, 'Appartments', 'tnt_app_num'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'bld_id' => null,
			'tnt_app_num' => null,
			'tnt_first_name' => Yii::t('app', 'Tnt First Name'),
			'tnt_last_name' => Yii::t('app', 'Tnt Last Name'),
			'tnt_password' => Yii::t('app', 'Tnt Password'),
			'tnt_birthday' => Yii::t('app', 'Tnt Birthday'),
			'tnt_email' => Yii::t('app', 'Tnt Email'),
			'tnt_app_phone' => Yii::t('app', 'Tnt App Phone'),
			'tnt_picture' => Yii::t('app', 'Tnt Picture'),
			'tnt_mobile' => Yii::t('app', 'Tnt Mobile'),
			'tnt_entry_date' => Yii::t('app', 'Tnt Entry Date'),
			'tnt_occupation' => Yii::t('app', 'Tnt Occupation'),
			'tnt_is_owner' => Yii::t('app', 'Tnt Is Owner'),
			'bld' => null,
			'tntAppNum' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('bld_id', $this->bld_id);
		$criteria->compare('tnt_app_num', $this->tnt_app_num);
		$criteria->compare('tnt_first_name', $this->tnt_first_name, true);
		$criteria->compare('tnt_last_name', $this->tnt_last_name, true);
		$criteria->compare('tnt_password', $this->tnt_password, true);
		$criteria->compare('tnt_birthday', $this->tnt_birthday, true);
		$criteria->compare('tnt_email', $this->tnt_email, true);
		$criteria->compare('tnt_app_phone', $this->tnt_app_phone, true);
		$criteria->compare('tnt_picture', $this->tnt_picture, true);
		$criteria->compare('tnt_mobile', $this->tnt_mobile, true);
		$criteria->compare('tnt_entry_date', $this->tnt_entry_date, true);
		$criteria->compare('tnt_occupation', $this->tnt_occupation, true);
		$criteria->compare('tnt_is_owner', $this->tnt_is_owner);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}