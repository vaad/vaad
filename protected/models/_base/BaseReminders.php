<?php

/**
 * This is the model base class for the table "reminders".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Reminders".
 *
 * Columns in table "reminders" available as properties of the model,
 * followed by relations of table "reminders" available as properties of the model.
 *
 * @property integer $id
 * @property integer $bld_id
 * @property integer $apt_id
 * @property string $reminder_time
 * @property string $title
 * @property string $remarks
 *
 * @property Appartments $apt
 * @property Buildings $bld
 */
abstract class BaseReminders extends VdActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'reminders';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Reminders|Reminders', $n);
	}

	public static function representingColumn() {
		return 'title';
	}

	public function rules() {
		return array(
			array(' apt_id, title', 'required'),
			array('bld_id, apt_id', 'numerical', 'integerOnly'=>true),
			array('title', 'length', 'max'=>255),
			array('reminder_time, remarks', 'safe'),
			array('reminder_time, remarks', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, bld_id, apt_id, reminder_time, title, remarks', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'apt' => array(self::BELONGS_TO, 'Appartments', 'apt_id'),
			'bld' => array(self::BELONGS_TO, 'Buildings', 'bld_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'bld_id' => null,
			'apt_id' => null,
			'reminder_time' => Yii::t('app', 'Reminder Time'),
			'title' => Yii::t('app', 'Title'),
			'remarks' => Yii::t('app', 'Remarks'),
			'apt' => null,
			'bld' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('bld_id', $this->bld_id);
		$criteria->compare('apt_id', $this->apt_id);
		$criteria->compare('reminder_time', $this->reminder_time, true);
		$criteria->compare('title', $this->title, true);
		$criteria->compare('remarks', $this->remarks, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
