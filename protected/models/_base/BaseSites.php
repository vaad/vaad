<?php

/**
 * This is the model base class for the table "sites".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Sites".
 *
 * Columns in table "sites" available as properties of the model,
 * followed by relations of table "sites" available as properties of the model.
 *
 * @property integer $id
 * @property string $st_name
 * @property string $st_slogen
 * @property string $st_street
 * @property string $st_street_num
 * @property string $st_city
 * @property string $st_zipcode
 *
 * @property Buildings[] $buildings
 */
abstract class BaseSites extends GxActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    protected function beforeFind() {
        $site_id = Yii::app()->params['site_id'];
        $criteria = new CDbCriteria;
        $criteria->condition = "id = $site_id";
        //$criteria->order = "username ASC";
        $this->dbCriteria->mergeWith($criteria);
        parent::beforeFind();
    }

    public function tableName() {
        return 'sites';
    }

    public static function label($n = 1) {
        return Yii::t('app', 'Sites|Sites', $n);
    }

    public static function representingColumn() {
        return 'st_name';
    }

    public function rules() {
        return array(
            array('st_name', 'required'),
            array('st_name', 'length', 'max' => 100),
            array('st_slogen', 'length', 'max' => 150),
            array('st_street', 'length', 'max' => 50),
            array('st_street_num', 'length', 'max' => 10),
            array('st_city', 'length', 'max' => 25),
            array('st_zipcode', 'length', 'max' => 5),
            array('st_slogen, st_street, st_street_num, st_city, st_zipcode', 'default', 'setOnEmpty' => true, 'value' => null),
            array('id, st_name, st_slogen, st_street, st_street_num, st_city, st_zipcode', 'safe', 'on' => 'search'),
        );
    }

    public function relations() {
        return array(
            'buildings' => array(self::HAS_MANY, 'Buildings', 'site_id'),
        );
    }

    public function pivotModels() {
        return array(
        );
    }

    public function attributeLabels() {
        return array(
            'id' => Yii::t('app', 'ID'),
            'st_name' => Yii::t('app', 'St Name'),
            'st_slogen' => Yii::t('app', 'St Slogen'),
            'st_street' => Yii::t('app', 'St Street'),
            'st_street_num' => Yii::t('app', 'St Street Num'),
            'st_city' => Yii::t('app', 'St City'),
            'st_zipcode' => Yii::t('app', 'St Zipcode'),
            'buildings' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('st_name', $this->st_name, true);
        $criteria->compare('st_slogen', $this->st_slogen, true);
        $criteria->compare('st_street', $this->st_street, true);
        $criteria->compare('st_street_num', $this->st_street_num, true);
        $criteria->compare('st_city', $this->st_city, true);
        $criteria->compare('st_zipcode', $this->st_zipcode, true);

        return new CActiveDataProvider($this, array(
                    'criteria' => $criteria,
                ));
    }

}