<?php

/**
 * This is the model base class for the table "appartments".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Appartments".
 *
 * Columns in table "appartments" available as properties of the model,
 * followed by relations of table "appartments" available as properties of the model.
 *
 * @property integer $id
 * @property integer $bld_id
 * @property integer $app_num
 * @property integer $app_flat_num
 * @property integer $app_type
 * @property string $start_mnt_date
 * @property string $next_mnt_date
 * @property integer $mnt_gap
 * @property integer $mnt_gap_type
 *
 * @property Buildings $bld
 * @property AppCodes $appType
 * @property AppTaxes[] $appTaxes
 * @property Tenants[] $tenants
 * @property Reminders[] $reminders
 * @property Incomes[] $incomes
 * @property AptMaintenance[] $aptMaintenances
 */
abstract class BaseAppartments extends VdActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'appartments';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Appartments|Appartments', $n);
	}

	public static function representingColumn() {
		return 'app_num';
	}

	public function rules() {
		return array(
			array('app_num', 'required'),
			array('bld_id, app_num, app_flat_num, app_type, mnt_gap, mnt_gap_type', 'numerical', 'integerOnly'=>true),
			array('start_mnt_date, next_mnt_date', 'safe'),
			array('app_flat_num, app_type, start_mnt_date, next_mnt_date, mnt_gap, mnt_gap_type', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, bld_id, app_num, app_flat_num, app_type, start_mnt_date, next_mnt_date, mnt_gap, mnt_gap_type', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'bld' => array(self::BELONGS_TO, 'Buildings', 'bld_id'),
			'appType' => array(self::BELONGS_TO, 'AppCodes', 'app_type'),
			'appTaxes' => array(self::HAS_MANY, 'AppTaxes', 'app_id'),
			'tenants' => array(self::HAS_MANY, 'Tenants', 'tnt_app_num'),
			'reminders' => array(self::HAS_MANY, 'Reminders', 'apt_id'),
			'incomes' => array(self::HAS_MANY, 'Incomes', 'inc_apt_num'),
			'aptMaintenances' => array(self::HAS_MANY, 'AptMaintenance', 'apt_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'bld_id' => null,
			'app_num' => Yii::t('app', 'App Num'),
			'app_flat_num' => Yii::t('app', 'App Flat Num'),
			'app_type' => null,
			'start_mnt_date' => Yii::t('app', 'Start Mnt Date'),
			'next_mnt_date' => Yii::t('app', 'Next Mnt Date'),
			'mnt_gap' => Yii::t('app', 'Mnt Gap'),
			'mnt_gap_type' => Yii::t('app', 'Mnt Gap Type'),
			'bld' => null,
			'appType' => null,
			'appTaxes' => null,
			'tenants' => null,
			'reminders' => null,
			'incomes' => null,
			'aptMaintenances' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('bld_id', $this->bld_id);
		$criteria->compare('app_num', $this->app_num);
		$criteria->compare('app_flat_num', $this->app_flat_num);
		$criteria->compare('app_type', $this->app_type);
		$criteria->compare('start_mnt_date', $this->start_mnt_date, true);
		$criteria->compare('next_mnt_date', $this->next_mnt_date, true);
		$criteria->compare('mnt_gap', $this->mnt_gap);
		$criteria->compare('mnt_gap_type', $this->mnt_gap_type);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
