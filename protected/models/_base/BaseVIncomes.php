<?php

/**
 * This is the model base class for the table "v_incomes".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "VIncomes".
 *
 * Columns in table "v_incomes" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property integer $bld_id
 * @property integer $prj_id
 * @property string $inc_date
 * @property string $inc_until_date
 * @property double $inc_amount
 * @property boolean $inc_paid
 * @property integer $inc_branch
 * @property integer $inc_chk_no
 * @property string $inc_chk_date
 * @property integer $inc_apt_num
 * @property integer $inc_bank
 * @property double $mm
 * @property double $yy
 *
 */
abstract class BaseVIncomes extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'v_incomes';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'VIncomes|VIncomes', $n);
	}

	public static function representingColumn() {
		return 'inc_date';
	}

	public function rules() {
		return array(
			array('id, bld_id, prj_id, inc_branch, inc_chk_no, inc_apt_num, inc_bank', 'numerical', 'integerOnly'=>true),
			array('inc_amount, mm, yy', 'numerical'),
			array('inc_date, inc_until_date, inc_paid, inc_chk_date', 'safe'),
			array('id, bld_id, prj_id, inc_date, inc_until_date, inc_amount, inc_paid, inc_branch, inc_chk_no, inc_chk_date, inc_apt_num, inc_bank, mm, yy', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, bld_id, prj_id, inc_date, inc_until_date, inc_amount, inc_paid, inc_branch, inc_chk_no, inc_chk_date, inc_apt_num, inc_bank, mm, yy', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'bld_id' => Yii::t('app', 'Bld'),
			'prj_id' => Yii::t('app', 'Prj'),
			'inc_date' => Yii::t('app', 'Inc Date'),
			'inc_until_date' => Yii::t('app', 'Inc Until Date'),
			'inc_amount' => Yii::t('app', 'Inc Amount'),
			'inc_paid' => Yii::t('app', 'Inc Paid'),
			'inc_branch' => Yii::t('app', 'Inc Branch'),
			'inc_chk_no' => Yii::t('app', 'Inc Chk No'),
			'inc_chk_date' => Yii::t('app', 'Inc Chk Date'),
			'inc_apt_num' => Yii::t('app', 'Inc Apt Num'),
			'inc_bank' => Yii::t('app', 'Inc Bank'),
			'mm' => Yii::t('app', 'Mm'),
			'yy' => Yii::t('app', 'Yy'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('bld_id', $this->bld_id);
		$criteria->compare('prj_id', $this->prj_id);
		$criteria->compare('inc_date', $this->inc_date, true);
		$criteria->compare('inc_until_date', $this->inc_until_date, true);
		$criteria->compare('inc_amount', $this->inc_amount);
		$criteria->compare('inc_paid', $this->inc_paid);
		$criteria->compare('inc_branch', $this->inc_branch);
		$criteria->compare('inc_chk_no', $this->inc_chk_no);
		$criteria->compare('inc_chk_date', $this->inc_chk_date, true);
		$criteria->compare('inc_apt_num', $this->inc_apt_num);
		$criteria->compare('inc_bank', $this->inc_bank);
		$criteria->compare('mm', $this->mm);
		$criteria->compare('yy', $this->yy);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}