<?php

/**
 * This is the model base class for the table "ads".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Ads".
 *
 * Columns in table "ads" available as properties of the model,
 * followed by relations of table "ads" available as properties of the model.
 *
 * @property integer $id
 * @property integer $bld_id
 * @property string $name
 * @property string $title
 * @property string $content_txt
 * @property boolean $is_asking
 * @property boolean $is_offering
 * @property string $phone_num
 * @property string $remarks
 * @property double $price_asked
 * @property integer $category
 * @property string $creation_date
 * @property string $update_time
 *
 * @property Buildings $bld
 * @property AdCatCodes $category0
 */
abstract class BaseAds extends VdActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'ads';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Ads|Ads', $n);
	}

	public static function representingColumn() {
		return 'title';
	}

	public function rules() {
		return array(
			array('title, content_txt, creation_date, update_time', 'required'),
			array('bld_id, category', 'numerical', 'integerOnly'=>true),
			array('price_asked', 'numerical'),
			array('name, title', 'length', 'max'=>255),
			array('phone_num', 'length', 'max'=>15),
			array('is_asking, is_offering, remarks', 'safe'),
			array('name, is_asking, is_offering, phone_num, remarks, price_asked, category', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, bld_id, name, title, content_txt, is_asking, is_offering, phone_num, remarks, price_asked, category, creation_date, update_time', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'bld' => array(self::BELONGS_TO, 'Buildings', 'bld_id'),
			'category0' => array(self::BELONGS_TO, 'AdCatCodes', 'category'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'bld_id' => null,
			'name' => Yii::t('app', 'Name'),
			'title' => Yii::t('app', 'Title'),
			'content_txt' => Yii::t('app', 'Content Txt'),
			'is_asking' => Yii::t('app', 'Is Asking'),
			'is_offering' => Yii::t('app', 'Is Offering'),
			'phone_num' => Yii::t('app', 'Phone Num'),
			'remarks' => Yii::t('app', 'Remarks'),
			'price_asked' => Yii::t('app', 'Price Asked'),
			'category' => null,
			'creation_date' => Yii::t('app', 'Creation Date'),
			'update_time' => Yii::t('app', 'Update Time'),
			'bld' => null,
			'category0' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('bld_id', $this->bld_id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('title', $this->title, true);
		$criteria->compare('content_txt', $this->content_txt, true);
		$criteria->compare('is_asking', $this->is_asking);
		$criteria->compare('is_offering', $this->is_offering);
		$criteria->compare('phone_num', $this->phone_num, true);
		$criteria->compare('remarks', $this->remarks, true);
		$criteria->compare('price_asked', $this->price_asked);
		$criteria->compare('category', $this->category);
		$criteria->compare('creation_date', $this->creation_date, true);
		$criteria->compare('update_time', $this->update_time, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}
